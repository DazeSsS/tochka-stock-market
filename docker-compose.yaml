services:
  db:
    container_name: db
    image: postgres:16
    restart: unless-stopped
    volumes:
      - market_data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
  redis:
    container_name: redis
    image: redis:8
    restart: unless-stopped
    ports:
      - 6379:6379
    volumes:
      - redis_data:/data
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    command: redis-server --requirepass ${REDIS_PASSWORD} --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
  app:
    container_name: app
    image: market:0.1
    build: .
    restart: unless-stopped
    volumes:
      - ./src/migrations:/app/src/migrations
    command: >
      sh -c "alembic upgrade head &&
      gunicorn src.main:app --workers 4 --worker-class uvicorn.workers.UvicornWorker --bind=0.0.0.0:8000"
    ports:
      - 8000:8000
    env_file:
      - ./.env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

volumes:
  market_data:
  redis_data: